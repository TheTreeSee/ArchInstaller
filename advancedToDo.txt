✅ Your Current TODO List – Notes & Suggestions:
    firewalld over ufw:
        ✅ firewalld is more integrated with systemd and better suited for advanced setups (zones, rich rules).
        ❗ ufw is simpler for users coming from Ubuntu. If you expect users to configure it manually, firewalld has a steeper learning curve.
        🔄 Suggestion: Offer a toggle or detect if SERVER_MODE is true, default to firewalld.
    gvfs, gvfs-mtp:
        ✅ These are essential for desktop environments (file manager support for USB/Android/etc.).
        ➕ Add them to a DESKTOP_MODE or when you detect certain packages like GNOME/KDE.
    os-prober installation on dual-boot (servermode=false):
        🟡 It is installed, but not enabled or checked.
        💡 Improve by checking for other OS partitions and enabling GRUB_DISABLE_OS_PROBER=false in /etc/default/grub.
    set_keymap function:
        ❗ You’re mapping azerty to "fr", but labeling it as "azerty"—unclear to users.
        💡 Detect valid KEYMAP via localectl list-keymaps or offer a prompt to choose.
        ✅ Add support for qwerty, azerty, colemak, etc., properly.
    SWAP_SIZE currently unused in auto_partition:
        ❗ Critical: It's ignored when USE_SWAP=true. Fix by using SWAP_SIZE to dynamically set the size in parted.
    Add max option to ROOT_SIZE:
        ✅ Great idea. You can use -1s or 100% in parted for last partition.
        💡 Tip: Dynamically calculate remaining space and adjust accordingly.
    SSH not working out of the box:
        🟡 You install and enable it, but check for:
            systemctl enable sshd is inside arch-chroot ✅
            Is sshd starting? You might be missing systemctl start sshd.
            Also ensure the network is up on boot and firewall allows port 22.
    Dual boot partition table issues:
        ❗ You assume whole disk wipe. Add detection for existing EFI partitions and prompt instead.
        ✅ Add logic to reuse /boot/efi instead of overwriting.
    Fix network and configure network function:
        ✅ Your placeholder is good; needs logic to detect interfaces and apply DHCP.
        💡 Optional: Detect if eth0 or enp0s3 exists, or use wildcard Name=*.
    Custom package install field:
        ✅ Simple fix: Parse $PACKAGES and install via pacstrap.
        💡 Bonus: Let users provide comma-separated string.
    Option REMOVE_INSTALLERS:
        ✅ Good cleanup step. If true, move or delete /root/postinstall.sh and maybe wipe /etc/systemd/system/postinstall.service.

Additional Improvements:
    Logging:
        ➕ Add logging with timestamps (logger or simple tee -a /var/log/install.log) for troubleshooting.
    Error handling:
        🟡 Right now, the script exits on most errors, but adding custom error messages or recovery suggestions helps debugging.
    Filesystem UUIDs in fstab:
        ✅ You're using genfstab, which does that. Good.
    Support for encrypted LUKS partitions (future improvement):
        🔐 Optional for advanced users, but worth adding a toggle.
    Validate user inputs in ask_user:
        ❗ Typo-prone values like disk names or sizes could crash the script.

If you're building a robust and flexible Arch installer, here are practical and powerful additions worth considering. They range from quality-of-life enhancements to advanced functionality for various use cases.
    🧠 User Experience / Quality of Life
        Menu-driven installer (using dialog, whiptail, or fzf)
    ➕ Makes it more user-friendly for non-technical users or for semi-interactive installs.
        Network interface selector (or auto-detect first connected interface)
    💡 Automatically choose an active network interface if multiple are detected.
        Mirrorlist auto-ranker (using reflector)
    ⚡ Speeds up installation by ranking fastest mirrors before pacstrap.
        Dotfiles bootstrapper
    🛠️ Allow user to pass a GitHub repo URL to clone dotfiles and apply after install.
        Detect if system is in VM
    📦 Tailor packages or skip certain steps (e.g. guest tools like virtualbox-guest-utils, qemu-guest-agent).
        Graphical environment toggle
    🖥️ If DESKTOP=true, install desktop environment + login manager (gnome, plasma, lightdm, etc.).
        AUR helper support (yay or paru)
    🧰 Install and configure it post-install for convenience.
        LUKS encryption option
    🔐 Let users opt-in for full disk encryption with password prompt.
        ZRAM or swapfile support
    🔄 More efficient swap options for lower-memory systems.
        Timezone detection (via IP geolocation)
    🕓 Auto-set timezone based on location (can use curl ipinfo.io or timedatectl set-timezone fallback).
    💾 System Configuration / Stability
        UEFI vs BIOS detection
    ✅ Adjust bootloader install path (GRUB for BIOS/UEFI automatically).
        Automatic BTRFS subvolume creation
    📁 Useful if filesystem is BTRFS — set up root, home, var, snapshots, etc.
        Filesystem trimming scheduler
    🧽 Set up fstrim.timer for SSDs if ext4/BTRFS is detected.
        Hook for custom scripts
    🔄 Let user provide an external .sh file to run before reboot (in /mnt/root/custom.sh).
        Install auditd or apparmor/SELinux
    🔒 Offer hardening options for security-conscious users.
    🧪 Experimental or Niche
        ZFS install option
    🧬 Complex, but some users want it (needs DKMS and custom GRUB config).
        Offline install mode
    📴 Bundle packages beforehand (using pacman -Syuw), useful for air-gapped systems.
        Language selector for localization
    🌍 Multi-language script support (i.e., French, German, Spanish output).
        System profile selector (laptop, desktop, server)
    🧩 Auto-configures packages and services accordingly.
        Cloud-init compatibility or image generation
    ☁️ Useful for building reusable Arch cloud/server images.
